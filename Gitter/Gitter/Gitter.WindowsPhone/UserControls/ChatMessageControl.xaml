<UserControl
    x:Class="Gitter.UserControls.ChatMessageControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:behaviors="using:Gitter.Behaviors"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:common="using:Gitter.Common"
    mc:Ignorable="d"
    d:DesignHeight="300"
    d:DesignWidth="400">

    <Grid Margin="{Binding Converter={StaticResource SamePreviousAuthorMarginConverter}}"
          RequestedTheme="Dark">

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="36" />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>

        <!-- Image of the author of the message (not showing current user avatar) -->
        <Grid Grid.Column="0"
              Visibility="{Binding Converter={StaticResource DistinctPreviousAuthorVisibilityConverter}}">
            
            <Image Visibility="{Binding Path=User, Converter={StaticResource MeToVisibilityConverter}, ConverterParameter=inverse}"
                   Source="{Binding Path=User.MediumAvatarUrl}"
                   HorizontalAlignment="Left" VerticalAlignment="Top" />

            <interactivity:Interaction.Behaviors>
                <core:EventTriggerBehavior EventName="Tapped">
                    <behaviors:OpenMenuFlyoutAction />
                </core:EventTriggerBehavior>
            </interactivity:Interaction.Behaviors>

            <FlyoutBase.AttachedFlyout>
                <MenuFlyout>
                    <MenuFlyoutItem x:Uid="/UIResources/respondTo" Text="respond to" 
                                    Command="{Binding Path=Main.SelectedRoom.RespondToCommand, Source={StaticResource Locator}}"
                                    CommandParameter="{Binding Path=User}" />
                </MenuFlyout>
            </FlyoutBase.AttachedFlyout>
        </Grid>

        <!-- Message content - message of any author except current user -->
        <Grid x:Name="userGrid" Grid.Column="1" Margin="6 0 -6 0"
              Visibility="{Binding Path=User, Converter={StaticResource MeToVisibilityConverter}, ConverterParameter=inverse}">

            <Polygon Points="8,0 0,0 8,10" Margin="0 6 0 0"
                     Visibility="{Binding Converter={StaticResource DistinctPreviousAuthorVisibilityConverter}}"
                     Stroke="{StaticResource BlueGrey}"
                     Fill="{StaticResource BlueGrey}" />

            <StackPanel Margin="6 0" Background="{StaticResource BlueGrey}">
                <RichTextBlock FontSize="18" TextWrapping="Wrap" Margin="6 3 6 0"
                               common:Properties.Html="{Binding Path=Html}" />

                <StackPanel Visibility="{Binding Converter={StaticResource SamePreviousAuthorVisibilityConverter}}">
                    <TextBlock FontSize="8" TextWrapping="Wrap" Margin="6 0 6 0" 
                               HorizontalAlignment="Right">
                        @<Run Text="{Binding Path=User.Username}" />
                    </TextBlock>

                    <TextBlock FontSize="8" TextWrapping="Wrap" Margin="6 0 6 6" 
                               HorizontalAlignment="Right"
                               Text="{Binding Path=SentDate, Converter={StaticResource DateTimeOffsetToTimeAgoConverter}}" />
                </StackPanel>

            </StackPanel>

            <interactivity:Interaction.Behaviors>
                <core:EventTriggerBehavior EventName="Holding">
                    <behaviors:OpenMenuFlyoutAction />
                </core:EventTriggerBehavior>
            </interactivity:Interaction.Behaviors>

            <FlyoutBase.AttachedFlyout>
                <MenuFlyout>
                    <MenuFlyoutItem x:Uid="/UIResources/copy" Text="copy" 
                                    Command="{Binding Path=Main.SelectedRoom.CopyMessageCommand, Source={StaticResource Locator}}"
                                    CommandParameter="{Binding}" />
                </MenuFlyout>
            </FlyoutBase.AttachedFlyout>

        </Grid>

        <!-- Message content - message of current user -->
        <Grid x:Name="meGrid" Grid.Column="1" Margin="6 0 -6 0"
              Visibility="{Binding Path=User, Converter={StaticResource MeToVisibilityConverter}}">

            <StackPanel Margin="6 0" Background="{StaticResource WhiteGray}">
                <RichTextBlock FontSize="18" TextWrapping="Wrap" Margin="6 3 6 0"
                               common:Properties.Html="{Binding Path=Html}" />

                <StackPanel Visibility="{Binding Converter={StaticResource SamePreviousAuthorVisibilityConverter}}">

                    <TextBlock FontSize="8" TextWrapping="Wrap" Margin="6 0 6 6" 
                               HorizontalAlignment="Right"
                               Text="{Binding Path=SentDate, Converter={StaticResource DateTimeOffsetToTimeAgoConverter}}" />

                </StackPanel>
            </StackPanel>

            <interactivity:Interaction.Behaviors>
                <core:EventTriggerBehavior EventName="Holding">
                    <behaviors:OpenMenuFlyoutAction />
                </core:EventTriggerBehavior>
            </interactivity:Interaction.Behaviors>

            <FlyoutBase.AttachedFlyout>
                <MenuFlyout>
                    <MenuFlyoutItem x:Uid="/UIResources/remove" Text="remove" 
                                    Command="{Binding Path=Main.SelectedRoom.RemoveMessageCommand, Source={StaticResource Locator}}"
                                    CommandParameter="{Binding}" />
                    <MenuFlyoutItem x:Uid="/UIResources/copy" Text="copy" 
                                    Command="{Binding Path=Main.SelectedRoom.CopyMessageCommand, Source={StaticResource Locator}}"
                                    CommandParameter="{Binding}" />
                </MenuFlyout>
            </FlyoutBase.AttachedFlyout>

        </Grid>
    </Grid>
</UserControl>
