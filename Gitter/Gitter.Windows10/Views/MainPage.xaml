<Page
    x:Class="Gitter.Views.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:userControls="using:Gitter.Windows10.UserControls"
    mc:Ignorable="d"
    NavigationCacheMode="Required"
    RequestedTheme="Light"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
    DataContext="{Binding Source={StaticResource Locator}, Path=Main}">

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="60" />
            <RowDefinition />
        </Grid.RowDefinitions>

        <!-- Main Toggle Button (show/hide pane) -->
        <Grid Grid.Row="0" Background="{StaticResource BlueGrey}">

            <ToggleButton x:Name="paneToggle" IsChecked="True" Background="{StaticResource BlueGrey}"
                          Style="{StaticResource TextBlockButtonStyle}" HorizontalAlignment="Left">
                <StackPanel Orientation="Horizontal" Margin="0 0 0 6">
                    <Image Source="../Assets/Gitter.transparent.png" Height="56" Margin="0 0 0 -6" />
                    <TextBlock Text="GITTER" Margin="6 0 0 0" VerticalAlignment="Bottom" Foreground="White"
                               FontSize="40" CharacterSpacing="10" 
                               Visibility="{Binding ElementName=paneToggle, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}" />
                    <TextBlock Text="{Binding Path=SelectedRoom.Room.Name}" Margin="6 0 0 0" VerticalAlignment="Bottom" Foreground="White"
                               FontSize="32" CharacterSpacing="10" 
                               Visibility="{Binding ElementName=paneToggle, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=inverse}" />
                </StackPanel>
            </ToggleButton>

        </Grid>


        <!-- SplitView => Rooms & Messages -->
        <SplitView Grid.Row="1"
                   IsPaneOpen="{Binding ElementName=paneToggle, Path=IsChecked}" 
                   PaneBackground="{StaticResource BlueGrey}"
                   DisplayMode="Inline">

            <!-- Pane Content - Left side -->
            <SplitView.Pane>
                <Grid RequestedTheme="Dark" Margin="6 0 6 6">

                    <!-- Compact Pane View -->
                    <Grid Visibility="{Binding ElementName=paneToggle, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=inverse}">
                        <!-- TODO : Used to show if rooms received new messages (unread count) -->
                    </Grid>

                    <!-- Full Pane View -->
                    <Grid Visibility="{Binding ElementName=paneToggle, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>


                        <!-- List of rooms -->
                        <ListView Grid.Row="0" x:Name="roomsListView"
                              ItemsSource="{Binding Path=Rooms}">

                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <Button Margin="0 3"
                                            HorizontalContentAlignment="Stretch"
                                            HorizontalAlignment="Stretch"
                                            Command="{Binding Main.SelectRoomCommand, Source={StaticResource Locator}}"
                                            CommandParameter="{Binding}"
                                            Tapped="SelectRoom_Tapped">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>

                                            <StackPanel DataContext="{Binding Room}">
                                                <TextBlock Text="{Binding Name}" FontSize="20" />
                                                <TextBlock Text="{Binding Topic}" FontSize="8" 
                                                       TextWrapping="Wrap"
                                                       Visibility="{Binding Topic, Converter={StaticResource EmptyStringToVisibilityConverter}}" />
                                            </StackPanel>

                                            <Grid Grid.Column="1" Margin="0 -2 -4 0" VerticalAlignment="Top"
                                              Visibility="{Binding UnreadMessagesCount, Converter={StaticResource UnreadMessagesCountToVisibilityConverter}}">

                                                <Ellipse Width="24" Height="24" Fill="White" />
                                                <TextBlock Text="{Binding UnreadMessagesCount, Converter={StaticResource UnreadMessagesCountConverter}}"
                                                       FontSize="12" FontWeight="Bold" Margin="0 -1 0 0"
                                                       HorizontalAlignment="Center" VerticalAlignment="Center"
                                                       Foreground="{StaticResource BlueGrey}"/>

                                            </Grid>
                                        </Grid>
                                    </Button>
                                </DataTemplate>
                            </ListView.ItemTemplate>

                            <ListView.ItemContainerStyle>
                                <Style TargetType="ListViewItem">
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />

                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ListViewItem">
                                                <Border x:Name="border" Background="Transparent">
                                                    <VisualStateManager.VisualStateGroups>
                                                        <VisualStateGroup x:Name="CommonStates">
                                                            <VisualState x:Name="Normal" />
                                                            <VisualState x:Name="Disabled" />
                                                        </VisualStateGroup>
                                                        <VisualStateGroup x:Name="SelectionStates">
                                                            <VisualState x:Name="Unselected" />
                                                            <VisualState x:Name="Selected">
                                                                <Storyboard>
                                                                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                                              Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                                        <EasingColorKeyFrame KeyTime="0" Value="LightBlue" />
                                                                    </ColorAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="SelectedUnfocused">
                                                                <Storyboard>
                                                                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                                              Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                                        <EasingColorKeyFrame KeyTime="0" Value="SkyBlue" />
                                                                    </ColorAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </VisualState>
                                                        </VisualStateGroup>
                                                    </VisualStateManager.VisualStateGroups>
                                                    <ContentPresenter/>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ListView.ItemContainerStyle>

                        </ListView>

                        <!-- Refresh rooms button -->
                        <Button Grid.Row="1" x:Uid="/UIResources/refreshContent" Content="refresh" 
                                FontSize="22"
                                HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                Command="{Binding Path=RefreshCommand}" />
                    </Grid>

                </Grid>
            </SplitView.Pane>

            <!-- Main content of the app (chat messages) -->
            <SplitView.Content>
                <Grid DataContext="{Binding Path=SelectedRoom}" Margin="6">

                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <!-- List of messages -->
                    <ListView x:Name="messagesListView"
                              ItemsSource="{Binding Path=Messages}"
                              IncrementalLoadingTrigger="Edge">

                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ListViewItem">
                                            <ContentPresenter />
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ListView.ItemContainerStyle>

                        <ListView.ItemContainerTransitions>
                            <TransitionCollection />
                        </ListView.ItemContainerTransitions>

                        <ListView.Template>
                            <ControlTemplate>
                                <Border BorderThickness="{TemplateBinding BorderThickness}"
                                        Padding="{TemplateBinding Padding}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        Background="{TemplateBinding Background}">
                                    <ScrollViewer x:Name="ScrollViewer" 
                                                  ZoomMode="Disabled" 
                                                  RenderTransformOrigin="0.5,0.5">
                                        <ScrollViewer.RenderTransform>
                                            <CompositeTransform Rotation="180" ScaleX="-1" />
                                        </ScrollViewer.RenderTransform>

                                        <ItemsPresenter x:Name="ItemsPresenter" Margin="0 0 18 0" />
                                    </ScrollViewer>
                                </Border>
                            </ControlTemplate>
                        </ListView.Template>

                        <ListView.ItemTemplate>
                            <DataTemplate>

                                <userControls:ChatMessageControl RenderTransformOrigin="0.5,0.5"
                                                                 Visibility="{Binding Text, Converter={StaticResource EmptyStringToVisibilityConverter}}">
                                    <userControls:ChatMessageControl.RenderTransform>
                                        <CompositeTransform Rotation="180" ScaleX="-1" />
                                    </userControls:ChatMessageControl.RenderTransform>
                                </userControls:ChatMessageControl>

                            </DataTemplate>
                        </ListView.ItemTemplate>

                    </ListView>

                    <!-- Here user can type & send his message -->
                    <TextBox Grid.Row="1" Margin="72 0 18 0"
                             Visibility="{Binding Main.SelectedRoom, Converter={StaticResource NullToVisibilityConverter}, Source={StaticResource Locator}}"
                             Text="{Binding TextMessage, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                             x:Uid="/UIResources/typeMessageHere" PlaceholderText="type your message here"
                             TextWrapping="Wrap" />
                </Grid>
            </SplitView.Content>
        </SplitView>
    </Grid>

    <!-- Actions in AppBar -->
    <Page.BottomAppBar>
        <CommandBar>
            <CommandBar.PrimaryCommands>
                <AppBarButton x:Uid="/UIResources/send" Label="send" Icon="PostUpdate"
                              Command="{Binding SelectedRoom.SendMessageCommand}"
                              IsEnabled="{Binding Converter={StaticResource NullToBooleanConverter}}" />
                <AppBarButton x:Uid="/UIResources/refresh" Label="refresh" Icon="Refresh"
                              Command="{Binding SelectedRoom.RefreshCommand}"
                              IsEnabled="{Binding Converter={StaticResource NullToBooleanConverter}}" />
            </CommandBar.PrimaryCommands>

            <CommandBar.SecondaryCommands>
                <AppBarButton x:Uid="/UIResources/chatWithUs" Label="chat with us" 
                              Command="{Binding Path=ChatWithUsCommand}" />
            </CommandBar.SecondaryCommands>
        </CommandBar>
    </Page.BottomAppBar>
</Page>
